/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppHome {
    }
    interface AppRoot {
    }
    interface AppSinglePost {
        "slug": string;
    }
    interface CoreArchives {
        "data": any;
    }
    interface CoreAudio {
        "data": any;
    }
    interface CoreButton {
        "data": any;
    }
    interface CoreButtons {
        "data": any;
    }
    interface CoreCategories {
        "data": any;
    }
    interface CoreCode {
        "data": any;
    }
    interface CoreColumn {
        "data": any;
    }
    interface CoreColumns {
        "data": any;
    }
    interface CoreCover {
        "data": any;
    }
    interface CoreEmbed {
        "data": any;
    }
    interface CoreFile {
        "data": any;
    }
    interface CoreGallery {
        "data": any;
    }
    interface CoreGroup {
        "data": any;
    }
    interface CoreHeading {
        "data": any;
    }
    interface CoreImage {
        "data": any;
    }
    interface CoreLatestPosts {
        "data": any;
    }
    interface CoreList {
        "data": any;
    }
    interface CoreMediaText {
        "data": any;
    }
    interface CorePageList {
        "data": any;
    }
    interface CoreParagraph {
        "data": any;
    }
    interface CorePreformatted {
        "data": any;
    }
    interface CorePullquote {
        "data": any;
    }
    interface CoreQuote {
        "data": any;
    }
    interface CoreSeparator {
        "data": any;
    }
    interface CoreSpacer {
        "data": any;
    }
    interface CoreTable {
        "data": any;
    }
    interface CoreTextColumns {
        "data": any;
    }
    interface CoreVerse {
        "data": any;
    }
    interface CoreVideo {
        "data": any;
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppSinglePostElement extends Components.AppSinglePost, HTMLStencilElement {
    }
    var HTMLAppSinglePostElement: {
        prototype: HTMLAppSinglePostElement;
        new (): HTMLAppSinglePostElement;
    };
    interface HTMLCoreArchivesElement extends Components.CoreArchives, HTMLStencilElement {
    }
    var HTMLCoreArchivesElement: {
        prototype: HTMLCoreArchivesElement;
        new (): HTMLCoreArchivesElement;
    };
    interface HTMLCoreAudioElement extends Components.CoreAudio, HTMLStencilElement {
    }
    var HTMLCoreAudioElement: {
        prototype: HTMLCoreAudioElement;
        new (): HTMLCoreAudioElement;
    };
    interface HTMLCoreButtonElement extends Components.CoreButton, HTMLStencilElement {
    }
    var HTMLCoreButtonElement: {
        prototype: HTMLCoreButtonElement;
        new (): HTMLCoreButtonElement;
    };
    interface HTMLCoreButtonsElement extends Components.CoreButtons, HTMLStencilElement {
    }
    var HTMLCoreButtonsElement: {
        prototype: HTMLCoreButtonsElement;
        new (): HTMLCoreButtonsElement;
    };
    interface HTMLCoreCategoriesElement extends Components.CoreCategories, HTMLStencilElement {
    }
    var HTMLCoreCategoriesElement: {
        prototype: HTMLCoreCategoriesElement;
        new (): HTMLCoreCategoriesElement;
    };
    interface HTMLCoreCodeElement extends Components.CoreCode, HTMLStencilElement {
    }
    var HTMLCoreCodeElement: {
        prototype: HTMLCoreCodeElement;
        new (): HTMLCoreCodeElement;
    };
    interface HTMLCoreColumnElement extends Components.CoreColumn, HTMLStencilElement {
    }
    var HTMLCoreColumnElement: {
        prototype: HTMLCoreColumnElement;
        new (): HTMLCoreColumnElement;
    };
    interface HTMLCoreColumnsElement extends Components.CoreColumns, HTMLStencilElement {
    }
    var HTMLCoreColumnsElement: {
        prototype: HTMLCoreColumnsElement;
        new (): HTMLCoreColumnsElement;
    };
    interface HTMLCoreCoverElement extends Components.CoreCover, HTMLStencilElement {
    }
    var HTMLCoreCoverElement: {
        prototype: HTMLCoreCoverElement;
        new (): HTMLCoreCoverElement;
    };
    interface HTMLCoreEmbedElement extends Components.CoreEmbed, HTMLStencilElement {
    }
    var HTMLCoreEmbedElement: {
        prototype: HTMLCoreEmbedElement;
        new (): HTMLCoreEmbedElement;
    };
    interface HTMLCoreFileElement extends Components.CoreFile, HTMLStencilElement {
    }
    var HTMLCoreFileElement: {
        prototype: HTMLCoreFileElement;
        new (): HTMLCoreFileElement;
    };
    interface HTMLCoreGalleryElement extends Components.CoreGallery, HTMLStencilElement {
    }
    var HTMLCoreGalleryElement: {
        prototype: HTMLCoreGalleryElement;
        new (): HTMLCoreGalleryElement;
    };
    interface HTMLCoreGroupElement extends Components.CoreGroup, HTMLStencilElement {
    }
    var HTMLCoreGroupElement: {
        prototype: HTMLCoreGroupElement;
        new (): HTMLCoreGroupElement;
    };
    interface HTMLCoreHeadingElement extends Components.CoreHeading, HTMLStencilElement {
    }
    var HTMLCoreHeadingElement: {
        prototype: HTMLCoreHeadingElement;
        new (): HTMLCoreHeadingElement;
    };
    interface HTMLCoreImageElement extends Components.CoreImage, HTMLStencilElement {
    }
    var HTMLCoreImageElement: {
        prototype: HTMLCoreImageElement;
        new (): HTMLCoreImageElement;
    };
    interface HTMLCoreLatestPostsElement extends Components.CoreLatestPosts, HTMLStencilElement {
    }
    var HTMLCoreLatestPostsElement: {
        prototype: HTMLCoreLatestPostsElement;
        new (): HTMLCoreLatestPostsElement;
    };
    interface HTMLCoreListElement extends Components.CoreList, HTMLStencilElement {
    }
    var HTMLCoreListElement: {
        prototype: HTMLCoreListElement;
        new (): HTMLCoreListElement;
    };
    interface HTMLCoreMediaTextElement extends Components.CoreMediaText, HTMLStencilElement {
    }
    var HTMLCoreMediaTextElement: {
        prototype: HTMLCoreMediaTextElement;
        new (): HTMLCoreMediaTextElement;
    };
    interface HTMLCorePageListElement extends Components.CorePageList, HTMLStencilElement {
    }
    var HTMLCorePageListElement: {
        prototype: HTMLCorePageListElement;
        new (): HTMLCorePageListElement;
    };
    interface HTMLCoreParagraphElement extends Components.CoreParagraph, HTMLStencilElement {
    }
    var HTMLCoreParagraphElement: {
        prototype: HTMLCoreParagraphElement;
        new (): HTMLCoreParagraphElement;
    };
    interface HTMLCorePreformattedElement extends Components.CorePreformatted, HTMLStencilElement {
    }
    var HTMLCorePreformattedElement: {
        prototype: HTMLCorePreformattedElement;
        new (): HTMLCorePreformattedElement;
    };
    interface HTMLCorePullquoteElement extends Components.CorePullquote, HTMLStencilElement {
    }
    var HTMLCorePullquoteElement: {
        prototype: HTMLCorePullquoteElement;
        new (): HTMLCorePullquoteElement;
    };
    interface HTMLCoreQuoteElement extends Components.CoreQuote, HTMLStencilElement {
    }
    var HTMLCoreQuoteElement: {
        prototype: HTMLCoreQuoteElement;
        new (): HTMLCoreQuoteElement;
    };
    interface HTMLCoreSeparatorElement extends Components.CoreSeparator, HTMLStencilElement {
    }
    var HTMLCoreSeparatorElement: {
        prototype: HTMLCoreSeparatorElement;
        new (): HTMLCoreSeparatorElement;
    };
    interface HTMLCoreSpacerElement extends Components.CoreSpacer, HTMLStencilElement {
    }
    var HTMLCoreSpacerElement: {
        prototype: HTMLCoreSpacerElement;
        new (): HTMLCoreSpacerElement;
    };
    interface HTMLCoreTableElement extends Components.CoreTable, HTMLStencilElement {
    }
    var HTMLCoreTableElement: {
        prototype: HTMLCoreTableElement;
        new (): HTMLCoreTableElement;
    };
    interface HTMLCoreTextColumnsElement extends Components.CoreTextColumns, HTMLStencilElement {
    }
    var HTMLCoreTextColumnsElement: {
        prototype: HTMLCoreTextColumnsElement;
        new (): HTMLCoreTextColumnsElement;
    };
    interface HTMLCoreVerseElement extends Components.CoreVerse, HTMLStencilElement {
    }
    var HTMLCoreVerseElement: {
        prototype: HTMLCoreVerseElement;
        new (): HTMLCoreVerseElement;
    };
    interface HTMLCoreVideoElement extends Components.CoreVideo, HTMLStencilElement {
    }
    var HTMLCoreVideoElement: {
        prototype: HTMLCoreVideoElement;
        new (): HTMLCoreVideoElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-root": HTMLAppRootElement;
        "app-single-post": HTMLAppSinglePostElement;
        "core-archives": HTMLCoreArchivesElement;
        "core-audio": HTMLCoreAudioElement;
        "core-button": HTMLCoreButtonElement;
        "core-buttons": HTMLCoreButtonsElement;
        "core-categories": HTMLCoreCategoriesElement;
        "core-code": HTMLCoreCodeElement;
        "core-column": HTMLCoreColumnElement;
        "core-columns": HTMLCoreColumnsElement;
        "core-cover": HTMLCoreCoverElement;
        "core-embed": HTMLCoreEmbedElement;
        "core-file": HTMLCoreFileElement;
        "core-gallery": HTMLCoreGalleryElement;
        "core-group": HTMLCoreGroupElement;
        "core-heading": HTMLCoreHeadingElement;
        "core-image": HTMLCoreImageElement;
        "core-latest-posts": HTMLCoreLatestPostsElement;
        "core-list": HTMLCoreListElement;
        "core-media-text": HTMLCoreMediaTextElement;
        "core-page-list": HTMLCorePageListElement;
        "core-paragraph": HTMLCoreParagraphElement;
        "core-preformatted": HTMLCorePreformattedElement;
        "core-pullquote": HTMLCorePullquoteElement;
        "core-quote": HTMLCoreQuoteElement;
        "core-separator": HTMLCoreSeparatorElement;
        "core-spacer": HTMLCoreSpacerElement;
        "core-table": HTMLCoreTableElement;
        "core-text-columns": HTMLCoreTextColumnsElement;
        "core-verse": HTMLCoreVerseElement;
        "core-video": HTMLCoreVideoElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppRoot {
    }
    interface AppSinglePost {
        "slug"?: string;
    }
    interface CoreArchives {
        "data"?: any;
    }
    interface CoreAudio {
        "data"?: any;
    }
    interface CoreButton {
        "data"?: any;
    }
    interface CoreButtons {
        "data"?: any;
    }
    interface CoreCategories {
        "data"?: any;
    }
    interface CoreCode {
        "data"?: any;
    }
    interface CoreColumn {
        "data"?: any;
    }
    interface CoreColumns {
        "data"?: any;
    }
    interface CoreCover {
        "data"?: any;
    }
    interface CoreEmbed {
        "data"?: any;
    }
    interface CoreFile {
        "data"?: any;
    }
    interface CoreGallery {
        "data"?: any;
    }
    interface CoreGroup {
        "data"?: any;
    }
    interface CoreHeading {
        "data"?: any;
    }
    interface CoreImage {
        "data"?: any;
    }
    interface CoreLatestPosts {
        "data"?: any;
    }
    interface CoreList {
        "data"?: any;
    }
    interface CoreMediaText {
        "data"?: any;
    }
    interface CorePageList {
        "data"?: any;
    }
    interface CoreParagraph {
        "data"?: any;
    }
    interface CorePreformatted {
        "data"?: any;
    }
    interface CorePullquote {
        "data"?: any;
    }
    interface CoreQuote {
        "data"?: any;
    }
    interface CoreSeparator {
        "data"?: any;
    }
    interface CoreSpacer {
        "data"?: any;
    }
    interface CoreTable {
        "data"?: any;
    }
    interface CoreTextColumns {
        "data"?: any;
    }
    interface CoreVerse {
        "data"?: any;
    }
    interface CoreVideo {
        "data"?: any;
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-root": AppRoot;
        "app-single-post": AppSinglePost;
        "core-archives": CoreArchives;
        "core-audio": CoreAudio;
        "core-button": CoreButton;
        "core-buttons": CoreButtons;
        "core-categories": CoreCategories;
        "core-code": CoreCode;
        "core-column": CoreColumn;
        "core-columns": CoreColumns;
        "core-cover": CoreCover;
        "core-embed": CoreEmbed;
        "core-file": CoreFile;
        "core-gallery": CoreGallery;
        "core-group": CoreGroup;
        "core-heading": CoreHeading;
        "core-image": CoreImage;
        "core-latest-posts": CoreLatestPosts;
        "core-list": CoreList;
        "core-media-text": CoreMediaText;
        "core-page-list": CorePageList;
        "core-paragraph": CoreParagraph;
        "core-preformatted": CorePreformatted;
        "core-pullquote": CorePullquote;
        "core-quote": CoreQuote;
        "core-separator": CoreSeparator;
        "core-spacer": CoreSpacer;
        "core-table": CoreTable;
        "core-text-columns": CoreTextColumns;
        "core-verse": CoreVerse;
        "core-video": CoreVideo;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-single-post": LocalJSX.AppSinglePost & JSXBase.HTMLAttributes<HTMLAppSinglePostElement>;
            "core-archives": LocalJSX.CoreArchives & JSXBase.HTMLAttributes<HTMLCoreArchivesElement>;
            "core-audio": LocalJSX.CoreAudio & JSXBase.HTMLAttributes<HTMLCoreAudioElement>;
            "core-button": LocalJSX.CoreButton & JSXBase.HTMLAttributes<HTMLCoreButtonElement>;
            "core-buttons": LocalJSX.CoreButtons & JSXBase.HTMLAttributes<HTMLCoreButtonsElement>;
            "core-categories": LocalJSX.CoreCategories & JSXBase.HTMLAttributes<HTMLCoreCategoriesElement>;
            "core-code": LocalJSX.CoreCode & JSXBase.HTMLAttributes<HTMLCoreCodeElement>;
            "core-column": LocalJSX.CoreColumn & JSXBase.HTMLAttributes<HTMLCoreColumnElement>;
            "core-columns": LocalJSX.CoreColumns & JSXBase.HTMLAttributes<HTMLCoreColumnsElement>;
            "core-cover": LocalJSX.CoreCover & JSXBase.HTMLAttributes<HTMLCoreCoverElement>;
            "core-embed": LocalJSX.CoreEmbed & JSXBase.HTMLAttributes<HTMLCoreEmbedElement>;
            "core-file": LocalJSX.CoreFile & JSXBase.HTMLAttributes<HTMLCoreFileElement>;
            "core-gallery": LocalJSX.CoreGallery & JSXBase.HTMLAttributes<HTMLCoreGalleryElement>;
            "core-group": LocalJSX.CoreGroup & JSXBase.HTMLAttributes<HTMLCoreGroupElement>;
            "core-heading": LocalJSX.CoreHeading & JSXBase.HTMLAttributes<HTMLCoreHeadingElement>;
            "core-image": LocalJSX.CoreImage & JSXBase.HTMLAttributes<HTMLCoreImageElement>;
            "core-latest-posts": LocalJSX.CoreLatestPosts & JSXBase.HTMLAttributes<HTMLCoreLatestPostsElement>;
            "core-list": LocalJSX.CoreList & JSXBase.HTMLAttributes<HTMLCoreListElement>;
            "core-media-text": LocalJSX.CoreMediaText & JSXBase.HTMLAttributes<HTMLCoreMediaTextElement>;
            "core-page-list": LocalJSX.CorePageList & JSXBase.HTMLAttributes<HTMLCorePageListElement>;
            "core-paragraph": LocalJSX.CoreParagraph & JSXBase.HTMLAttributes<HTMLCoreParagraphElement>;
            "core-preformatted": LocalJSX.CorePreformatted & JSXBase.HTMLAttributes<HTMLCorePreformattedElement>;
            "core-pullquote": LocalJSX.CorePullquote & JSXBase.HTMLAttributes<HTMLCorePullquoteElement>;
            "core-quote": LocalJSX.CoreQuote & JSXBase.HTMLAttributes<HTMLCoreQuoteElement>;
            "core-separator": LocalJSX.CoreSeparator & JSXBase.HTMLAttributes<HTMLCoreSeparatorElement>;
            "core-spacer": LocalJSX.CoreSpacer & JSXBase.HTMLAttributes<HTMLCoreSpacerElement>;
            "core-table": LocalJSX.CoreTable & JSXBase.HTMLAttributes<HTMLCoreTableElement>;
            "core-text-columns": LocalJSX.CoreTextColumns & JSXBase.HTMLAttributes<HTMLCoreTextColumnsElement>;
            "core-verse": LocalJSX.CoreVerse & JSXBase.HTMLAttributes<HTMLCoreVerseElement>;
            "core-video": LocalJSX.CoreVideo & JSXBase.HTMLAttributes<HTMLCoreVideoElement>;
        }
    }
}
